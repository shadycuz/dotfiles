#!/usr/bin/env bash
# {{- if eq .chezmoi.username "shadycuz" }}
sudo apt update
#	{{- if contains "WSL" .chezmoi.kernel.osrelease }}

# Install systemd-genie so we have working systemd (in case we need it for something)
# These are the pre-reqs for genie
if [ ! -f "/etc/apt/sources.list.d/wsl-transdebian.list" ]; then
    sudo apt install -y lsb-release
    sudo wget -O /etc/apt/trusted.gpg.d/wsl-transdebian.gpg https://arkane-systems.github.io/wsl-transdebian/apt/wsl-transdebian.gpg
    sudo chmod a+r /etc/apt/trusted.gpg.d/wsl-transdebian.gpg
    WSL_REPOS="deb https://arkane-systems.github.io/wsl-transdebian/apt/ $(lsb_release -cs) main\ndeb-src https://arkane-systems.github.io/wsl-transdebian/apt/ $(lsb_release -cs) main"
    echo -e "${WSL_REPOS}" | sudo tee -a /etc/apt/sources.list.d/wsl-transdebian.list
fi

if ! command -v genie &> /dev/null
then
    sudo systemctl set-default multi-user.target

    sudo systemctl disable multipathd.socket

    echo 'Installing systemd-genie'
    sudo apt update
    sudo apt install -y systemd-genie
    # Initialize genie, thankfully this is idempotent
    genie -i

    # Genie will take a long time and spit out lots of warnings the first time its loaded
    # From inside the genie bottle run...
    # sudo systemctl set-default multi-user.target
    # Then disable these services
    # https://github.com/arkane-systems/genie/wiki/Systemd-units-known-to-be-problematic-under-WSL

    # This is needed to fix the SSH agent service
    sudo ssh-keygen -A

    # Needed to fix the filesystem mount service
    sudo e2label /dev/sdb cloudimg-rootfs
fi
#	{{- end }}

# Install pyenv to manage python versions on the system
if ! command -v pyenv &> /dev/null
then
    echo 'Installing pyenv'
    curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
fi

# Install oh my posh so we have a nice looking shell
if ! command -v /usr/local/bin/oh-my-posh &> /dev/null
then
    echo 'Installing oh-my-posh'
    sudo wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh
    sudo chmod +x /usr/local/bin/oh-my-posh
    sudo apt install -y fontconfig
fi

# It's like 60 megs, so we will want to make sure they are not already installed
if ! fc-list | grep -q 'Meslo'; then
    echo 'Installing Meslo Font'
    oh-my-posh font install Meslo
fi

if [ ! -d "${HOME}/.poshthemes" ]; then
    echo 'Installing themes for oh-my-posh'
    sudo apt install -y unzip
    mkdir ~/.poshthemes
    wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/themes.zip -O ~/.poshthemes/themes.zip
    unzip ~/.poshthemes/themes.zip -d ~/.poshthemes
    chmod u+rw ~/.poshthemes/*.omp.*
    rm ~/.poshthemes/themes.zip
fi

# I usually dont use SNAP but it does keep vscode automaticly updated <3
if ! command -v code &> /dev/null
then
    # Chrome is kinda a pre-req but I installed in manually (just to sign into vscode sync)
    echo 'Installing vscode prereqs'
    sudo apt install -y gnome-keyring
    echo 'Installing vscode'
    sudo snap install --classic code
fi

if ! command -v docker &> /dev/null
then
    echo 'Remove any previous docker stuff'
    sudo apt remove -y docker docker-engine docker.io containerd runc
    echo 'Installing Docker pre-reqs'
    sudo update-alternatives --set iptables /usr/sbin/iptables-legacy
    sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
    sudo apt install -y --no-install-recommends apt-transport-https ca-certificates curl gnupg2
    . /etc/os-release
    curl -fsSL https://download.docker.com/linux/${ID}/gpg | sudo tee /etc/apt/trusted.gpg.d/docker.asc
    echo "deb [arch=amd64] https://download.docker.com/linux/${ID} ${VERSION_CODENAME} stable" | sudo tee /etc/apt/sources.list.d/docker.list
    sudo apt update
    echo 'Installing Docker'
    sudo apt install -y docker-ce docker-ce-cli containerd.io
    sudo usermod -aG docker "$USER"
fi
# {{ end }}
